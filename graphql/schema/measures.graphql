input MeasuresFilter {
  measureRepID: StringFilter
  protocolID: StringFilter
  sampleID: StringFilter
  purposeID: StringFilter
  polygonID: StringFilter
  siteID: StringFilter
  datasetID: StringFilter
  measureSetRepID: StringFilter
  aDateStart: DateTimeFilter
  aDateEnd: DateTimeFilter
  reportDate: DateTimeFilter
  compartment: StringFilter
  specimenID: StringFilter
  fraction: StringFilter
  group: StringFilter
  class: StringFilter
  measure: StringFilter
  value: StringFilter
  unit: StringFilter
  aggregation: StringFilter
  nomenclature: StringFilter
  index: IntFilter
  measureLic: StringFilter
  reportable: IntFilter
  organizationID: StringFilter
  contactID: StringFilter
  refLink: StringFilter
  lastEdited: DateTimeFilter
}

type Measures {
  measureRepID: String
  protocolID: String
  sampleID: String
  purposeID: String
  polygonID: String
  siteID: String
  datasetID: String
  measureSetRepID: String
  aDateStart: DateTime
  aDateEnd: DateTime
  reportDate: DateTime
  compartment: String
  specimenID: String
  fraction: String
  group: String
  class: String
  measure: String
  value: String
  unit: String
  aggregation: String
  nomenclature: String
  index: Int
  measureLic: String
  reportable: Int
  organizationID: String
  contactID: String
  refLink: String
  lastEdited: DateTime
  # protocolID_protocols: Protocols
  # sampleID_samples: Samples
  # purposeID_parts: Parts
  # polygonID_polygons: Polygons
  # siteID_sites: Sites
  # datasetID_datasets: Datasets
  # measureSetRepID_measureSets: MeasureSets
  # specimenID_parts: Parts
  # fraction_parts: Parts
  # group_parts: Parts
  # class_parts: Parts
  # measure_parts: Parts
  # unit_parts: Parts
  # aggregation_parts: Parts
  # nomenclature_parts: Parts
  # measureLic_parts: Parts
  # organizationID_organizations: Organizations
  # contactID_contacts: Contacts
  # qualityReports(filter: String, pagination: String, where: Condition, _debug: Boolean, _cache: Boolean): PageQualityReports
}

extend type Query {
  measures(filter: MeasuresFilter): [Measures]!
}

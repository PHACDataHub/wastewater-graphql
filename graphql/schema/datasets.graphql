type Datasets {
  parDatasetID: String
  datasetID: String
  name: String
  license: String
  descr: String
  refLink: String
  langID: Int
  funderCont: String
  custodyCont: String
  funderID: String
  custodyID: String
  notes: String
  # samples(filter: SamplesFilter): [Samples]!
  # measures(filter: MeasuresFilter): [Measures]!
  # polygons(filter: PolygonsFilter): [Polygons]!
  # instruments(filter: InstrumentsFilter): [Instruments]!
  # sites(filter: SitesFilter): [Sites]!
}

input DatasetsFilter {
  parDatasetID: StringFilter
  datasetID: StringFilter
  name: StringFilter
  license: StringFilter
  descr: StringFilter
  refLink: StringFilter
  langID: IntFilter
  funderCont: StringFilter
  custodyCont: StringFilter
  funderID: StringFilter
  custodyID: StringFilter
  notes: StringFilter
}

extend type Query {
  datasets(filter: DatasetsFilter): [Datasets]!
}
